From dbe538e0a25747ee852b2109f64209849387004d Mon Sep 17 00:00:00 2001
From: Angelillo15 <contact@angelillo15.es>
Date: Tue, 27 Jun 2023 09:29:32 +0200
Subject: [PATCH] Rename references from BungeeCord to NookCord


diff --git a/log/src/main/java/net/md_5/bungee/log/LogDispatcher.java b/log/src/main/java/net/md_5/bungee/log/LogDispatcher.java
index d703d6d2..a45fe49a 100644
--- a/log/src/main/java/net/md_5/bungee/log/LogDispatcher.java
+++ b/log/src/main/java/net/md_5/bungee/log/LogDispatcher.java
@@ -12,7 +12,7 @@ public class LogDispatcher extends Thread
 
     public LogDispatcher(BungeeLogger logger)
     {
-        super( "Waterfall Logger Thread" );
+        super( "NookCord Logger Thread" );
         this.logger = logger;
     }
 
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index a7091ab6..d01cc35b 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -189,7 +189,7 @@ public class BungeeCord extends ProxyServer
     public BungeeCord() throws IOException
     {
         // Java uses ! to indicate a resource inside of a jar/zip/other container. Running Bungee from within a directory that has a ! will cause this to muck up.
-        Preconditions.checkState( new File( "." ).getAbsolutePath().indexOf( '!' ) == -1, "Cannot use Waterfall in directory with ! in path." );
+        Preconditions.checkState( new File( "." ).getAbsolutePath().indexOf( '!' ) == -1, "Cannot use NookCord in directory with ! in path." );
 
         reloadMessages();
 
@@ -545,7 +545,7 @@ public class BungeeCord extends ProxyServer
     @Override
     public String getName()
     {
-        return "Waterfall";
+        return "NookCord";
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java b/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java
index 96a9998d..deb32d33 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCordLauncher.java
@@ -54,7 +54,7 @@ public class BungeeCordLauncher
             if ( buildDate.before( deadline.getTime() ) )
             {
                 System.err.println( "*** Hey! This build is potentially outdated :( ***" );
-                System.err.println( "*** Please check for a new build from https://papermc.io/downloads ***" );
+                System.err.println( "*** Please check for a new build from https://github.com/Nookure/NookCord/releases ***" );
                 System.err.println( "*** Should this build be outdated, you will get NO support for it. ***" );
                 //System.err.println( "*** Server will start in 10 seconds ***" );
                 //Thread.sleep( TimeUnit.SECONDS.toMillis( 10 ) );
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java b/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
index b26035cf..50af1c24 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandBungee.java
@@ -3,6 +3,7 @@ package net.md_5.bungee.command;
 import net.md_5.bungee.api.ChatColor;
 import net.md_5.bungee.api.CommandSender;
 import net.md_5.bungee.api.ProxyServer;
+import net.md_5.bungee.api.chat.TextComponent;
 import net.md_5.bungee.api.plugin.Command;
 
 public class CommandBungee extends Command
@@ -16,6 +17,6 @@ public class CommandBungee extends Command
     @Override
     public void execute(CommandSender sender, String[] args)
     {
-        sender.sendMessage( ChatColor.BLUE + "This server is running Waterfall version " + ProxyServer.getInstance().getVersion() + " by md_5" );
+        sender.sendMessage( new TextComponent(ChatColor.BLUE + "This server is running NookCord version " + ProxyServer.getInstance().getVersion() + " by md_5 & Angelillo15 & Waterfall Team" ));
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java b/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
index 720d0c3b..dd850614 100644
--- a/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
+++ b/proxy/src/main/java/net/md_5/bungee/command/CommandReload.java
@@ -23,7 +23,7 @@ public class CommandReload extends Command
         BungeeCord.getInstance().startListeners();
         BungeeCord.getInstance().getPluginManager().callEvent( new ProxyReloadEvent( sender ) );
 
-        sender.sendMessage( ChatColor.BOLD.toString() + ChatColor.RED.toString() + "Waterfall has been reloaded."
-                + " This is NOT advisable and you will not be supported with any issues that arise! Please restart Waterfall ASAP." );
+        sender.sendMessage( ChatColor.BOLD.toString() + ChatColor.RED.toString() + "NookCord has been reloaded."
+                + " This is NOT advisable and you will not be supported with any issues that arise! Please restart NookCord ASAP." );
     }
 }
diff --git a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
index 0dd69778..6fda6d25 100644
--- a/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
+++ b/proxy/src/main/java/net/md_5/bungee/conf/YamlConfig.java
@@ -227,7 +227,7 @@ public class YamlConfig implements ConfigurationAdapter
             Map<String, Object> val = entry.getValue();
             String name = entry.getKey();
             String addr = get( "address", "localhost:25565", val );
-            String motd = ChatColor.translateAlternateColorCodes( '&', get( "motd", "&1Just another Waterfall - Forced Host", val ) );
+            String motd = ChatColor.translateAlternateColorCodes( '&', get( "motd", "&1Just another NookCord - Forced Host", val ) );
             boolean restricted = get( "restricted", false, val );
             SocketAddress address = Util.getAddr( addr );
             ServerInfo info = ProxyServer.getInstance().constructServerInfo( name, address, motd, restricted );
-- 
2.34.1

